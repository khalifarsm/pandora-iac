version: "3"
services:

# PostgreSQL aws is used instead
  postgresql:
    image: postgres:13-alpine
    restart: unless-stopped
    volumes:
      - ./postgresql/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
      - postgresql-data29:/var/lib/postgresql
    environment:
      - 'PANDORA_ENV=kube'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=123456789'
      - 'POSTGRES_DB=postgres'
      - 'POSTGRES_MAX_CONNECTIONS=1000'
    ports:
      - "5432:5432"

  signal:
    image: khalifarsm/pandora:signal
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8100:8080"
    depends_on:
      - postgresql
      - redis
    environment:
      - 'PANDORA_ENV=kube.yml'


  pandora:
    image: khalifarsm/pandora:api
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8102:8102"
    environment:
      - 'PANDORA_ENV=kube'
    depends_on:
      - postgresql
      - signal

  wipe:
    image: khalifarsm/pandora:wipe
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8103:8103"
    depends_on:
      - pandora

  payment:
    image: khalifarsm/pandora:payment
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8105:8105"
    depends_on:
      - admin


  web:
    image: khalifarsm/pandora:web
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8101:8101"

  admin:
    image: khalifarsm/pandora:admin
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8104:8104"
    depends_on:
      - postgresql
      - pandora
    environment:
      - 'PANDORA_ENV=kube'

# Redis
  redis:
    image: redis:7.0.12
    restart: unless-stopped
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-data:/data
    ports:
      - "6379:6379"


volumes:
  postgresql-data29:
  redis-data: