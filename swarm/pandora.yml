version: "3"
services:

# PostgreSQL aws is used instead
#  postgresql:
#    image: postgres:13-alpine
#    restart: unless-stopped
#    volumes:
#      - ./postgresql/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
#      - postgresql-data29:/var/lib/postgresql
#    env_file: 
#      - postgresql/postgresql.env
#    ports:
#      - "5432:5432"

  signal:
    image: khalifarsm/pandora:signal
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8100:8080"
    depends_on:
      - redis

  pandora:
    image: khalifarsm/pandora:api
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8102:8102"
    environment:
      - 'spring.datasource.url=jdbc:postgresql://postgresql:5432/signal-accounts'
      - 'signal.server.url=https://chat.muleinsights.com'
    depends_on:
      - signal

  wipe:
    image: khalifarsm/pandora:wipe
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8103:8103"
    depends_on:
      - pandora


  admin:
    image: khalifarsm/pandora:admin
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8104:8104"
    depends_on:
      - pandora

# Redis
  redis:
    image: redis:7.0.12
    restart: unless-stopped
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6379:6379"


#volumes:
#  postgresql-data29:
#  redis-data: