version: "3"
services:

# PostgreSQL aws is used instead
#  postgresql:
#    image: postgres:13-alpine
#    restart: unless-stopped
#    volumes:
#      - ./postgresql/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
#      - postgresql-data29:/var/lib/postgresql
#    env_file: 
#      - postgresql/postgresql.env
#    ports:
#      - "5432:5432"

  signal:
    image: acrprodpandora.azurecr.io/acrprodpandora/signal:latest
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8100:8080"
    depends_on:
      - postgresql
      - redis
    environment:
      - 'PANDORA_ENV=azure.yml'

  signaling:
    image: khalifarsm/pandora:signaling
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "5000:5000"

  signaling2:
    image: acrprodpandora.azurecr.io/acrprodpandora/signaling:latest
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "5001:5000"


  pandora:
    image: acrprodpandora.azurecr.io/acrprodpandora/api:latest
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8102:8102"
    environment:
      - 'PANDORA_ENV=azure'
    depends_on:
      - postgresql
      - signal

  wipe:
    image: acrprodpandora.azurecr.io/acrprodpandora/wipe:latest
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8103:8103"
    depends_on:
      - pandora

  payment:
    image: acrprodpandora.azurecr.io/acrprodpandora/payment:latest
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8105:8105"
    depends_on:
      - admin


#  web:
#    image: acrprodpandora.azurecr.io/acrprodpandora/web:latest
#    deploy:
#       replicas: 1
#    restart: unless-stopped
#    ports:
#      - "8101:8101"

  admin:
    image: acrprodpandora.azurecr.io/acrprodpandora/admin:latest
    deploy:
       replicas: 1
    restart: unless-stopped
    ports:
      - "8104:8104"
    depends_on:
      - postgresql
      - pandora
    environment:
      - 'PANDORA_ENV=azure'

# Redis
  redis:
    image: redis:7.0.12
    restart: unless-stopped
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-data:/data
    env_file: 
      - redis/redis.env

volumes:
#  postgresql-data29:
  redis-data: